dbname, "' AND table_schema NOT IN ('pg_catalog', 'files', 'information_schema') ORDER BY table_schema, table_name",
sep="")
dbTables <- dbGetQuery(con, sql1)
View(dbTables)
setwd("C:/Users/ftp/OneDrive - Erhvervsstyrelsen/Github/Ejendomsvurdering-og-plandata/Ejendomsvurdering-og-plandata/")
load("Århus.Rda")
set.seed(42)
Packages <- c("sf",               "RCurl",
"rwfs",              "data.table",
"devtools",              "XML",
"gdalUtils",              "rgdal",
"tmap",              "sp",
"raster",              "dplyr",
"rvest",              "stringr",
"ggplot2",              "tidyr",
"viridis",              "broom",
"maptools",              "caret",
"dplyr",              "plyr",
"scales",              "rgdal",
"raster",               "dplyr",
"geosphere",               "tmap",
"tmaptools",               "rgeos",
"randomForest",              "ranger",
"xgboost",              "ggmap",
"pROC",              "geosphere",
"maptools",              "rgeos",
"ggmap")
lapply(Packages, library, character.only = TRUE)
?require
if(!require(Packages)){
install.packages(Packages); require(Packages)
}
lapply(Packages, library, character.only = TRUE)
install.packages("rwfs")
install.packages("devtools")
library("devtools")
devtools::install_github("ropengov/rwfs")
lapply(Packages, library, character.only = TRUE)
add <- readr::read_csv("http://dawa.aws.dk/adresser?format=csv&kommunekode=0751")
install.packages("readr")
require("readr")
add <- readr::read_csv("http://dawa.aws.dk/adresser?format=csv&kommunekode=0751")
add2 <- add %>%
select('wgs84koordinat_bredde', 'wgs84koordinat_længde', 'etrs89koordinat_øst','etrs89koordinat_nord') %>%
dplyr::distinct(wgs84koordinat_bredde, wgs84koordinat_længde, .keep_all=TRUE)
rm(add)
BoligSalg <- Århus %>%
left_join(add2, by =  c('lat'='wgs84koordinat_bredde', 'lon'='wgs84koordinat_længde'))
write.table(BoligSalg, file = "Boligsalg.csv", sep=",")
class(BoligSalg)
rm(add2)
ÅRHUS_DSN <-"https://geoserver.plandata.dk/geoserver/wfs?servicename=wfs"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
install.packages("rgdal")
ÅRHUS_DSN <- "http://geoservice.plansystem.dk/wfs?service=WFS&request=GetFeature&version=1.0.0&typeNames=theme_pdk_lokalplan_vedtaget_v&CQL_FILTER=komnr=751"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ÅRHUS_DSN <- "http://geoservice.plandata.dk/wfs?service=WFS&request=GetFeature&version=1.0.0&typeNames=theme_pdk_lokalplan_vedtaget_v&CQL_FILTER=komnr=751"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ÅRHUS_DSN <-"https://geoserver.plandata.dk/geoserver/wfs?servicename=WFS@request=GetFaeture&Version=1.0.0&typeNames=theme_pdk_lokalplan_vedtaget_v"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ÅRHUS_DSN <-"http://geoserver.plandata.dk/geoserver/wfs?servicename=WFS@request=GetFaeture&Version=1.0.0&typeNames=theme_pdk_lokalplan_vedtaget_v"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ÅRHUS_DSN <-"http://geoserver.plandata.dk/geoserver/wfs?servicename=WFS@request=GetFeature&Version=1.0.0&typeNames=theme_pdk_lokalplan_vedtaget_v"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ÅRHUS_DSN <-"http://geoserver.plandata.dk/geoserver/wfs?servicename=WFS&request=GetFeature&Version=1.0.0&typeNames=theme_pdk_lokalplan_vedtaget_v"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ÅRHUS_DSN <-"http://geoserver.plandata.dk/geoserver/wfs?servicename=WFS&request=GetFeature&Version=1.0.0&typeNames=theme_pdk_lokalplan_vedtaget_v&CQL_FILTER=komnr=751"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ÅRHUS_DSN <-"http://geoserver.plandata.dk/geoserver/wfs?servicename=WFS&request=GetFeature&Version=1.0.0&typeNames=theme_pdk_lokalplan_vedtaget_v&CQL_FILTER=komnr=751"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ogr2ogr(ÅRHUS_DSN, "lokalplan_ÅRHUS.shp", "theme_pdk_lokalplan_vedtaget_v")  # hentning af data fra WFS
BoligSalg <- tidyr::drop_na(BoligSalg, etrs89koordinat_øst, etrs89koordinat_nord)
sf::read_sf("lokalplan_ÅRHUS.shp", crs = 25832) %>%
sf::st_join( x =
sf::st_as_sf(BoligSalg, coords = c("etrs89koordinat_øst", "etrs89koordinat_nord"),
crs = 25832), join = st_within, left = TRUE) %>%
sf::write_sf("bolig3.shp") #OBS skriver lokalfil
BoligmedLP <- sf::read_sf("bolig3.shp", crs = 25832)
test <-  BoligmedLP[!duplicated(BoligmedLP)]
test <-  BoligmedLP[!duplicated(BoligmedLP,)]
test <-  BoligmedLP[!duplicated(BoligmedLP;)]
test <-  unique(BoligmedLP)
+st_as_sf
?st_as_sf
?join
?st_within
BoligmedLP$Lokalplan <- ifelse(BoligmedLP$planid>0, 1, 0)
BoligmedLP$Lokalplan  <- BoligmedLP$Lokalplan %>% replace_na(0)
BoligmedLP$LP_ANV <- 0
if(BoligmedLP$anvgen = 11) {
BoligmedLP$LP_ANV <- 1
} else if(BoligmedLP$anvgen = 21) {
BoligmedLP$LP_ANV <- 2
} else if(BoligmedLP$anvgen = 31) {
BoligmedLP$LP_ANV <- 3
} else if(BoligmedLP$anvgen = 41) {
BoligmedLP$LP_ANV <- 4
} else if(BoligmedLP$anvgen = 51) {
BoligmedLP$LP_ANV <- 5
} else if(BoligmedLP$anvgen = 61) {
BoligmedLP$LP_ANV <- 6
} else if(BoligmedLP$anvgen = 71) {
BoligmedLP$LP_ANV <- 7
} else if(BoligmedLP$anvgen = 81) {
BoligmedLP$LP_ANV <- 8
} else {
BoligmedLP$LP_ANV <- 0
}
if(BoligmedLP$anvgen = 11) {
BoligmedLP$LP_ANV <- 1
} else if(BoligmedLP$anvgen = 21) {
BoligmedLP$LP_ANV <- 2
} else if(BoligmedLP$anvgen = 31) {
BoligmedLP$LP_ANV <- 3
} else if(BoligmedLP$anvgen = 41) {
BoligmedLP$LP_ANV <- 4
} else if(BoligmedLP$anvgen = 51) {
BoligmedLP$LP_ANV <- 5
} else if(BoligmedLP$anvgen = 61) {
BoligmedLP$LP_ANV <- 6
} else if(BoligmedLP$anvgen = 71) {
BoligmedLP$LP_ANV <- 7
} else if(BoligmedLP$anvgen = 81) {
BoligmedLP$LP_ANV <- 8
} else {
BoligmedLP$LP_ANV <- 0
}
if(BoligmedLP$anvgen == 11) {
BoligmedLP$LP_ANV <- 1
} else if(BoligmedLP$anvgen == 21) {
BoligmedLP$LP_ANV <- 2
} else if(BoligmedLP$anvgen == 31) {
BoligmedLP$LP_ANV <- 3
} else if(BoligmedLP$anvgen == 41) {
BoligmedLP$LP_ANV <- 4
} else if(BoligmedLP$anvgen == 51) {
BoligmedLP$LP_ANV <- 5
} else if(BoligmedLP$anvgen == 61) {
BoligmedLP$LP_ANV <- 6
} else if(BoligmedLP$anvgen == 71) {
BoligmedLP$LP_ANV <- 7
} else if(BoligmedLP$anvgen == 81) {
BoligmedLP$LP_ANV <- 8
} else {
BoligmedLP$LP_ANV <- 0
}
View(BoligmedLP)
else if(BoligmedLP$anvgen == 11) {
BoligmedLP$LP_ANV <- 1
} else if(BoligmedLP$anvgen == 21) {
BoligmedLP$LP_ANV <- 2
} else if(BoligmedLP$anvgen == 31) {
BoligmedLP$LP_ANV <- 3
} else if(BoligmedLP$anvgen == 41) {
BoligmedLP$LP_ANV <- 4
} else if(BoligmedLP$anvgen == 51) {
BoligmedLP$LP_ANV <- 5
} else if(BoligmedLP$anvgen == 61) {
BoligmedLP$LP_ANV <- 6
} else if(BoligmedLP$anvgen == 71) {
BoligmedLP$LP_ANV <- 7
} else if(BoligmedLP$anvgen == 81) {
BoligmedLP$LP_ANV <- 8
} else {
BoligmedLP$LP_ANV <- 0
}
BoligmedLP$LP_ANV <- 0
if(BoligmedLP$anvgen == 11){
BoligmedLP$LP_ANV <- 1
} else if(BoligmedLP$anvgen == 21) {
BoligmedLP$LP_ANV <- 2
} else if(BoligmedLP$anvgen == 31) {
BoligmedLP$LP_ANV <- 3
} else if(BoligmedLP$anvgen == 41) {
BoligmedLP$LP_ANV <- 4
} else if(BoligmedLP$anvgen == 51) {
BoligmedLP$LP_ANV <- 5
} else if(BoligmedLP$anvgen == 61) {
BoligmedLP$LP_ANV <- 6
} else if(BoligmedLP$anvgen == 71) {
BoligmedLP$LP_ANV <- 7
} else if(BoligmedLP$anvgen == 81) {
BoligmedLP$LP_ANV <- 8
} else {
BoligmedLP$LP_ANV <- 0
}
if(BoligmedLP$anvgen == 11){
BoligmedLP$LP_ANV <- 1
} else if(BoligmedLP$anvgen == 21) {
BoligmedLP$LP_ANV <- 2
} else if(BoligmedLP$anvgen == 31) {
BoligmedLP$LP_ANV <- 3
} else if(BoligmedLP$anvgen == 41) {
BoligmedLP$LP_ANV <- 4
} else if(BoligmedLP$anvgen == 51) {
BoligmedLP$LP_ANV <- 5
} else if(BoligmedLP$anvgen == 61) {
BoligmedLP$LP_ANV <- 6
} else if(BoligmedLP$anvgen == 71) {
BoligmedLP$LP_ANV <- 7
} else if(BoligmedLP$anvgen == 81) {
BoligmedLP$LP_ANV <- 8
} else {
BoligmedLP$LP_ANV <- 0
}
DSN_Kommuneplan_Ramme_751 <- "http://geoserver.plandata.dk/geoserver/wfs?servicename=WFS&request=GetFeature&Version=1.0.0&typeNames=theme_pdk_kommuneplanramme_vedtaget_v&CQL_FILTER=komnr=751"
ogrinfo(DSN_Kommuneplan_Ramme_751, so=TRUE)
ogr2ogr(DSN_Kommuneplan_Ramme_751, "Kommuneplanramme.shp", "theme_pdk_kommuneplanramme_vedtaget_v")
Rekreativeområder <- sf::read_sf("Kommuneplanramme.shp", crs = 25832)  %>%
filter(anvgen == 51) #JF datamodellen
BoligmedLP$afstandR <- st_distance(BoligmedLP,Rekreativeområder)[,1]
slot <-  "http://www.kulturarv.dk/geoserver/wfs?service=WFS&version=1.0.0&request=GetCapabilities"
ogrinfo(slot, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ogr2ogr(slot, "Bevaringssag.shp", "fbb:view_bygning_bevaringssag")
Bevaringssag <- sf::read_sf("Bevaringssag.shp", crs = 25832)  %>%
filter(kommune == "Århus")
Bolig_med_sag <- st_join(BoligmedLP, Bevaringssag, join = st_equals, left = TRUE)
# omdanner oplysningerne til en dikotom variable
Bolig_med_sag$Bevaringssag <- ifelse(Bolig_med_sag$bygningsid>0, 1, 0)
Bolig_med_sag$Bevaringssag  <- Bolig_med_sag$Bevaringssag %>% replace_na(0)
#OBS en del parametre har jeg defineret i url'en for at forsimple OGR hentningen.
ÅRHUS_DSN <-"http://geoserver.plandata.dk/geoserver/wfs?servicename=WFS&request=GetFeature&Version=1.0.0&typeNames=theme_pdk_lokalplandelomraade_vedtaget_v&CQL_FILTER=komnr=751"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ogr2ogr(ÅRHUS_DSN, "lokalplan_del_ÅRHUS.shp", "theme_pdk_lokalplandelomraade_vedtaget_v")  # hentning af data fra WFS
sf::read_sf("lokalplan_del_ÅRHUS.shp", crs = 25832) %>%
sf::st_join( x =
sf::st_as_sf(Bolig_med_sag, coords = c("etrs89koordinat_øst", "etrs89koordinat_nord"),
crs = 25832), join = st_within, left = TRUE) %>%
sf::write_sf("bolig4.shp") #OBS skriver lokalfil
Bolig_med_sag <- sf::read_sf("bolig4.shp", crs = 25832)
View(Bolig_med_sag)
#her omdanner jeg informationerne til en dikotom variable.
Bolig_med_sag$DelLokalplan <- ifelse(Bolig_med_sag$pland_x>0, 1, 0)
Bolig_med_sag$DelLokalplan  <- Bolig_med_sag$pland_x %>% replace_na(0)
saveRDS(Bolig_med_sag, "data.rds")
Data <- readRDS("Data.rds")
rm(Bevaringssag, Bolig_fra_CSV, Bolig_med_sag, BoligmedLP, BoligSalg, Rekreativeomrøder, Århus,slot, DSN_Kommuneplan_Ramme_751, ÅRHUS_DSN )
distinct(Data)
myvars <- c("buysum", "m2", "date", "n_rooms", "buld_yr",  "height", "pstnrnv", "lat", "lon", "postnr", "afstandR", "Bevaringssag", "Lokalplan", "DelLokalplan")
Data_fin <- Data[myvars]
rm(Data)
rm(Rekreativeområder)
View(Rekreativeområder)
rm("Rekreativeområder")
View(Rekreativeområder)
View(Rekreativeområder)
rm(test)
rm(Århus)
rm("Århus")
load("Århus.Rda")
View(Århus)
rm(Århus)
View(Århus)
setwd("C:/Users/ftp/OneDrive - Erhvervsstyrelsen/Github/Ejendomsvurdering-og-plandata/Ejendomsvurdering-og-plandata/")
load("Århus.Rda")
set.seed(42)
Packages <- c("sf",               "RCurl",
"rwfs",              "data.table",
"devtools",              "XML",
"gdalUtils",              "rgdal",
"tmap",              "sp",
"raster",              "dplyr",
"rvest",              "stringr",
"ggplot2",              "tidyr",
"viridis",              "broom",
"maptools",              "caret",
"dplyr",              "plyr",
"scales",              "rgdal",
"raster",               "dplyr",
"geosphere",               "tmap",
"tmaptools",               "rgeos",
"randomForest",              "ranger",
"xgboost",              "ggmap",
"pROC",              "geosphere",
"maptools",              "rgeos",
"ggmap",                "readr")
lapply(Packages, library, character.only = TRUE)
add <- readr::read_csv("http://dawa.aws.dk/adresser?format=csv&kommunekode=0751")
add2 <- add %>%
select('wgs84koordinat_bredde', 'wgs84koordinat_længde', 'etrs89koordinat_øst','etrs89koordinat_nord') %>%
dplyr::distinct(wgs84koordinat_bredde, wgs84koordinat_længde, .keep_all=TRUE)
rm(add)
BoligSalg <- Århus %>%
left_join(add2, by =  c('lat'='wgs84koordinat_bredde', 'lon'='wgs84koordinat_længde'))
write.table(BoligSalg, file = "Boligsalg.csv", sep=",")
class(BoligSalg)
rm(add2)
fields <-  c("buysum", "m2", "date", "n_rooms", "buld_yr",  "height", "pstnrnv", "lat", "lon", "postnr")
Boligsalg <- BoligSalg[fields]
fields <-  c("buysum", "m2", "date", "n_rooms", "buld_year",  "height", "pstnrnv", "lat", "lon", "postnr", "floor")
Boligsalg <- BoligSalg[fields]
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "pstnrnv", "lat", "lon", "postnr", "floor")
Boligsalg <- BoligSalg[fields]
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor")
Boligsalg <- BoligSalg[fields]
BoligSalg <- BoligSalg[fields]
rm(Boligsalg)
rm(Århus)
View(Århus)
View(Århus)
load("Århus.Rda")
add <- readr::read_csv("http://dawa.aws.dk/adresser?format=csv&kommunekode=0751")
add2 <- add %>%
select('wgs84koordinat_bredde', 'wgs84koordinat_længde', 'etrs89koordinat_øst','etrs89koordinat_nord') %>%
dplyr::distinct(wgs84koordinat_bredde, wgs84koordinat_længde, .keep_all=TRUE)
rm(add)
BoligSalg <- Århus %>%
left_join(add2, by =  c('lat'='wgs84koordinat_bredde', 'lon'='wgs84koordinat_længde'))
write.table(BoligSalg, file = "Boligsalg.csv", sep=",")
class(BoligSalg)
rm(add2)
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor", "etrs89koordinat_øst", "etrs89koordinat_nord")
BoligSalg <- BoligSalg[fields]
BoligSalg <- tidyr::drop_na(BoligSalg, etrs89koordinat_øst, etrs89koordinat_nord)
sf::read_sf("lokalplan_ÅRHUS.shp", crs = 25832) %>%
sf::st_join( x =
sf::st_as_sf(BoligSalg, coords = c("etrs89koordinat_øst", "etrs89koordinat_nord"),
crs = 25832), join = st_within, left = TRUE) %>%
sf::write_sf("bolig3.shp") #OBS skriver lokalfil
BoligSalg <- sf::read_sf("bolig3.shp", crs = 25832)
#her omdanner jeg informationerne til en dikotom variable.
BoligmedLP$Lokalplan <- ifelse(BoligmedLP$planid>0, 1, 0)
BoligmedLP$Lokalplan  <- BoligmedLP$Lokalplan %>% replace_na(0)
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor", "etrs89koordinat_øst", "etrs89koordinat_nord", "Lokalplan")
BoligSalg <- BoligSalg[fields]
#her omdanner jeg informationerne til en dikotom variable.
BoligSalg$Lokalplan <- ifelse(BoligSalg$planid>0, 1, 0)
BoligSalg$Lokalplan  <- BoligSalg$Lokalplan %>% replace_na(0)
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor", "etrs89koordinat_øst", "etrs89koordinat_nord", "Lokalplan")
BoligSalg <- BoligSalg[fields]
?tidyr::drop_na
load("Århus.Rda")
add <- readr::read_csv("http://dawa.aws.dk/adresser?format=csv&kommunekode=0751")
add2 <- add %>%
select('wgs84koordinat_bredde', 'wgs84koordinat_længde', 'etrs89koordinat_øst','etrs89koordinat_nord') %>%
dplyr::distinct(wgs84koordinat_bredde, wgs84koordinat_længde, .keep_all=TRUE)
rm(add)
# med ETRS89-coor i add2 datasættet kan det nu tilfÅ¸res Århus-boligsalg datasættet
BoligSalg <- Århus %>%
left_join(add2, by =  c('lat'='wgs84koordinat_bredde', 'lon'='wgs84koordinat_længde'))
write.table(BoligSalg, file = "Boligsalg.csv", sep=",")
class(BoligSalg)
rm(add2)
#Oprydning 1
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor", "etrs89koordinat_øst", "etrs89koordinat_nord")
BoligSalg <- BoligSalg[fields]
BoligSalg <- BoligSalg[!is.na(BoligSalg$etrs89koordinat_øst),]
BoligSalg <- BoligSalg[!is.na(BoligSalg$etrs89koordinat_nord),]
sf::read_sf("lokalplan_ÅRHUS.shp", crs = 25832) %>%
sf::st_join( x =
sf::st_as_sf(BoligSalg, coords = c("etrs89koordinat_øst", "etrs89koordinat_nord"),
crs = 25832), join = st_within, left = TRUE) %>%
sf::write_sf("bolig3.shp") #OBS skriver lokalfil
BoligSalg <- sf::read_sf("bolig3.shp", crs = 25832)
BoligSalg$Lokalplan <- ifelse(BoligSalg$planid>0, 1, 0)
BoligSalg$Lokalplan  <- BoligSalg$Lokalplan %>% replace_na(0)
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor", "etrs89koordinat_øst", "etrs89koordinat_nord", "Lokalplan")
BoligSalg <- BoligSalg[fields]
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor",  "Lokalplan")
BoligSalg <- BoligSalg[fields]
BoligSalg$LP_ANV <- 0
if(BoligSalg$anvgen == 11){
BoligSalg$LP_ANV <- 1
} else if(BoligSalg$anvgen == 21) {
BoligSalg$LP_ANV <- 2
} else if(BoligSalg$anvgen == 31) {
BoligSalg$LP_ANV <- 3
} else if(BoligSalg$anvgen == 41) {
BoligSalg$LP_ANV <- 4
} else if(BoligSalg$anvgen == 51) {
BoligSalg$LP_ANV <- 5
} else if(BoligSalg$anvgen == 61) {
BoligSalg$LP_ANV <- 6
} else if(BoligSalg$anvgen == 71) {
BoligSalg$LP_ANV <- 7
} else if(BoligSalg$anvgen == 81) {
BoligSalg$LP_ANV <- 8
} else {
BoligSalg$LP_ANV <- 0
}
load("Århus.Rda")
add <- readr::read_csv("http://dawa.aws.dk/adresser?format=csv&kommunekode=0751")
add2 <- add %>%
select('wgs84koordinat_bredde', 'wgs84koordinat_længde', 'etrs89koordinat_øst','etrs89koordinat_nord') %>%
dplyr::distinct(wgs84koordinat_bredde, wgs84koordinat_længde, .keep_all=TRUE)
rm(add)
BoligSalg <- Århus %>%
left_join(add2, by =  c('lat'='wgs84koordinat_bredde', 'lon'='wgs84koordinat_længde'))
write.table(BoligSalg, file = "Boligsalg.csv", sep=",")
class(BoligSalg)
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor", "etrs89koordinat_øst", "etrs89koordinat_nord")
BoligSalg <- BoligSalg[fields]
BoligSalg <- BoligSalg[!is.na(BoligSalg$etrs89koordinat_øst),]
BoligSalg <- BoligSalg[!is.na(BoligSalg$etrs89koordinat_nord),]
sf::read_sf("lokalplan_ÅRHUS.shp", crs = 25832) %>%
sf::st_join( x =
sf::st_as_sf(BoligSalg, coords = c("etrs89koordinat_øst", "etrs89koordinat_nord"),
crs = 25832), join = st_within, left = TRUE) %>%
sf::write_sf("bolig3.shp") #OBS skriver lokalfil
BoligSalg <- sf::read_sf("bolig3.shp", crs = 25832)
BoligSalg$Lokalplan <- ifelse(BoligSalg$planid>0, 1, 0)
BoligSalg$Lokalplan  <- BoligSalg$Lokalplan %>% replace_na(0)
BoligSalg$LP_ANV <- 0
if(BoligSalg$anvgen == 11){
BoligSalg$LP_ANV <- 1
} else if(BoligSalg$anvgen == 21) {
BoligSalg$LP_ANV <- 2
} else if(BoligSalg$anvgen == 31) {
BoligSalg$LP_ANV <- 3
} else if(BoligSalg$anvgen == 41) {
BoligSalg$LP_ANV <- 4
} else if(BoligSalg$anvgen == 51) {
BoligSalg$LP_ANV <- 5
} else if(BoligSalg$anvgen == 61) {
BoligSalg$LP_ANV <- 6
} else if(BoligSalg$anvgen == 71) {
BoligSalg$LP_ANV <- 7
} else if(BoligSalg$anvgen == 81) {
BoligSalg$LP_ANV <- 8
} else {
BoligSalg$LP_ANV <- 0
}
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor",  "Lokalplan", "LP_ANV")
BoligSalg <- BoligSalg[fields]
Rekreativeområder <- sf::read_sf("Kommuneplanramme.shp", crs = 25832)  %>%
filter(anvgen == 51) #JF datamodellen
BoligmedLP$afstandR <- st_distance(BoligmedLP,Rekreativeområder)[,1]
BoligSalg$afstandR <- st_distance(BoligmedLP,Rekreativeområder)[,1]
BoligSalg$afstandR <- st_distance(BoligSalg,Rekreativeområder)[,1]
slot <-  "http://www.kulturarv.dk/geoserver/wfs?service=WFS&version=1.0.0&request=GetCapabilities"
ogrinfo(slot, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ogr2ogr(slot, "Bevaringssag.shp", "fbb:view_bygning_bevaringssag")
Bevaringssag <- sf::read_sf("Bevaringssag.shp", crs = 25832)  %>%
filter(kommune == "Århus")
#spatialjoin --> omtrent 4000 boliger for en bevaringssag tilknyttet
BoligSalg <- st_join(BoligSalg, Bevaringssag, join = st_equals, left = TRUE)
# omdanner oplysningerne til en dikotom variable
BoligSalg$Bevaringssag <- ifelse(BoligSalg$bygningsid>0, 1, 0)
BoligSalg$Bevaringssag  <- BoligSalg$Bevaringssag %>% replace_na(0)
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor",  "Lokalplan", "LP_ANV", "afstandR", "bevaringssag")
BoligSalg <- BoligSalg[fields]
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor",  "Lokalplan", "LP_ANV", "afstandR", "Bevaringssag")
BoligSalg <- BoligSalg[fields]
#OBS en del parametre har jeg defineret i url'en for at forsimple OGR hentningen.
ÅRHUS_DSN <-"http://geoserver.plandata.dk/geoserver/wfs?servicename=WFS&request=GetFeature&Version=1.0.0&typeNames=theme_pdk_lokalplandelomraade_vedtaget_v&CQL_FILTER=komnr=751"
ogrinfo(ÅRHUS_DSN, so=TRUE) # finder hvilke temaer WFS'en indeholde - kun 1 grundet URL specifikantion
ogr2ogr(ÅRHUS_DSN, "lokalplan_del_ÅRHUS.shp", "theme_pdk_lokalplandelomraade_vedtaget_v")  # hentning af data fra WFS
sf::read_sf("lokalplan_del_ÅRHUS.shp", crs = 25832) %>%
sf::st_join( x =
sf::st_as_sf(BoligSalg, coords = c("etrs89koordinat_øst", "etrs89koordinat_nord"),
crs = 25832), join = st_within, left = TRUE) %>%
sf::write_sf("bolig4.shp") #OBS skriver lokalfil
BoligSalg <- sf::read_sf("bolig4.shp", crs = 25832)
BoligSalg$DelLokalplan <- ifelse(BoligSalg$pland_x>0, 1, 0)
BoligSalg$DelLokalplan  <- BoligSalg$pland_x %>% replace_na(0)
BoligSalg$DelLokalplan <- ifelse(BoligSalg$planid>0, 1, 0)
BoligSalg$DelLokalplan  <- BoligSalg$planid %>% replace_na(0)
fields <-  c("buysum", "m2", "date", "n_rooms", "build_year",  "height", "lat", "lon", "postnr", "floor",  "Lokalplan", "LP_ANV", "afstandR", "Bevaringssag","DelLokalplan")
BoligSalg <- BoligSalg[fields]
fields <-  c("buysum", "m2", "date", "n_rooms", "buld_yr",  "height", "lat", "lon", "postnr", "floor",  "Loklpln", "LP_ANV", "afstndR", "Bvrngss","DelLokalplan")
BoligSalg <- BoligSalg[fields]
saveRDS(Bolig_med_sag, "data.rds")
Data <- readRDS("Data.rds")
saveRDS(BoligSalg, "data.rds")
Data <- readRDS("Data.rds")
rm(Bevaringssag, Bolig_fra_CSV, Bolig_med_sag, BoligmedLP, BoligSalg, Rekreativeomrøder, Århus,slot, DSN_Kommuneplan_Ramme_751, ÅRHUS_DSN )
distinct(Data)
Data <- distinct(Data)
myvars <- c("buysum", "m2", "date", "n_rooms", "buld_yr",  "height", "lat", "lon", "postnr", "floor",  "Loklpln", "LP_ANV", "afstndR", "Bvrngss","DelLokalplan")
Data_fin <- Data[myvars]
saveRDS(Data_fin, "data.rds")
mean_within <- function(df, dist, col) {
buffer <- st_buffer(df, dist)
res <- df
res_col_name <- paste0("Lokalområde_", col)
res[res_col_name] <- NA
for(i in 1:nrow(buffer)) {
res[i, res_col_name] <- mean(`$`(df[if_else(is.na(as.logical(st_within(df,  st_buffer(df, dist)[i,]))), FALSE, TRUE), col], "buysum"))
}
res
}
#mean_within(Data_fin_NO, 200, "m2")
Data_fin_1 <-  mean_within(Data_fin, 200, "buysum")
setwd("C:/Users/ftp/OneDrive - Erhvervsstyrelsen/Github/Ejendomsvurdering-og-plandata/Ejendomsvurdering-og-plandata/")
set.seed(42)
Data <- readRDS("Data.rds")
rm("Data")
#Indhentning af pakker og afhængigheder
Packages <- c("sf",               "RCurl",
"rwfs",              "data.table",
"devtools",              "XML",
"gdalUtils",              "rgdal",
"tmap",              "sp",
"raster",              "dplyr",
"rvest",              "stringr",
"ggplot2",              "tidyr",
"viridis",              "broom",
"maptools",              "caret",
"dplyr",              "plyr",
"scales",              "rgdal",
"raster",               "dplyr",
"geosphere",               "tmap",
"tmaptools",               "rgeos",
"randomForest",              "ranger",
"xgboost",              "ggmap",
"pROC",              "geosphere",
"maptools",              "rgeos",
"ggmap",                "readr")
if(!require(Packages)){
install.packages(Packages)
}
lapply(Packages, library, character.only = TRUE)
